import express from 'express';
import { TelegramBotController } from '../controllers/telegramBotController.js';
const router = express.Router();
// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
router.post('/auth-url', TelegramBotController.createAuthUrl);
// –°–æ–∑–¥–∞–Ω–∏–µ LoginUrl –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è Telegram Login Widget
router.post('/login-url', TelegramBotController.createLoginUrl);
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.post('/verify-user', TelegramBotController.verifyUserAuth);
// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
router.get('/info', TelegramBotController.getBotInfo);
// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
router.post('/send-message', TelegramBotController.sendMessage);
// –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
router.get('/check-url', (req, res) => {
    const { userId } = req.query;
    const isProduction = process.env.NODE_ENV === 'production';
    // Telegram –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç localhost URLs
    const baseUrl = isProduction
        ? 'https://supermock.ru'
        : process.env.FRONTEND_URL || 'http://localhost:5173'; // –¢–æ–ª—å–∫–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    const checkUrl = userId
        ? `${baseUrl}/token-check?userId=${userId}`
        : `${baseUrl}/token-check`;
    res.json({
        success: true,
        data: {
            checkUrl,
            environment: isProduction ? 'production' : 'development',
            userId: userId || null,
            isTelegramCompatible: isProduction, // –§–ª–∞–≥ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        },
    });
});
// Webhook –¥–ª—è Telegram
router.post('/webhook', async (req, res) => {
    try {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Telegram
        console.log('üì• Webhook received:', req.body);
        const update = req.body;
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        if (update.message) {
            const { TelegramBotService } = await import('../services/telegramBotService.js');
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
            if (update.message.text && update.message.text.startsWith('/start')) {
                await TelegramBotService.handleStartCommand(update.message);
            }
        }
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback queries
        if (update.callback_query) {
            console.log('üì• Callback query received:', update.callback_query);
        }
        res.sendStatus(200);
    }
    catch (error) {
        console.error('‚ùå Webhook error:', error);
        res.sendStatus(500);
    }
});
export default router;
//# sourceMappingURL=telegramBot.js.map