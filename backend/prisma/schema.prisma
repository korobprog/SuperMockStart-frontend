// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  INTERVIEWER  // По умолчанию - интервьюер
  CANDIDATE    // После проведения интервью и получения обратной связи
}

enum InterviewStatus {
  PENDING      // Ожидает проведения
  COMPLETED    // Завершено
  FEEDBACK_RECEIVED // Получена обратная связь
}

model User {
  id        String   @id @default(cuid())
  telegramId String  @unique
  username  String?
  firstName String?
  lastName  String?
  status    UserStatus @default(INTERVIEWER) // Новое поле статуса
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Связи
  selectedProfessions SelectedProfession[]
  conductedInterviews Interview[] @relation("InterviewerInterviews")
  receivedInterviews  Interview[] @relation("CandidateInterviews")

  @@map("users")
}

model Interview {
  id          String   @id @default(cuid())
  interviewerId String
  candidateId   String
  status      InterviewStatus @default(PENDING)
  feedback    String?  // Обратная связь
  feedbackReceivedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Связи
  interviewer User @relation("InterviewerInterviews", fields: [interviewerId], references: [id], onDelete: Cascade)
  candidate   User @relation("CandidateInterviews", fields: [candidateId], references: [id], onDelete: Cascade)

  @@map("interviews")
}

model SelectedProfession {
  id        String   @id @default(cuid())
  userId    String
  profession String  // Название выбранной профессии
  createdAt DateTime @default(now())

  // Связь с пользователем
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("selected_professions")
}
