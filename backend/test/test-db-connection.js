import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testDatabaseConnection() {
  try {
    console.log('üîç Testing database connection...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ Database connection successful');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userCount = await prisma.users.count();
    console.log(`üìä Total users in database: ${userCount}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const recentUsers = await prisma.users.findMany({
      take: 5,
      orderBy: { createdAt: 'desc' },
      select: {
        id: true,
        telegramId: true,
        username: true,
        firstName: true,
        lastName: true,
        role: true,
        status: true,
        createdAt: true,
      },
    });

    console.log('üë• Recent users:');
    recentUsers.forEach((user, index) => {
      console.log(
        `  ${index + 1}. ${user.firstName} ${user.lastName} (${
          user.telegramId
        }) - ${user.role}`
      );
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegramId (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (recentUsers.length > 0) {
      const testUser = await prisma.users.findUnique({
        where: { telegramId: recentUsers[0].telegramId },
        select: {
          id: true,
          telegramId: true,
          username: true,
          firstName: true,
          lastName: true,
          role: true,
          status: true,
        },
      });

      if (testUser) {
        console.log('‚úÖ User lookup by telegramId successful:', testUser);
      } else {
        console.log('‚ùå User lookup by telegramId failed');
      }
    }
  } catch (error) {
    console.error('‚ùå Database connection error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testDatabaseConnection();
