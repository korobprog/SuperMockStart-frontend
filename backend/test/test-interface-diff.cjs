// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–ª–∏—á–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –º–µ–∂–¥—É dev –∏ production —Ä–µ–∂–∏–º–∞–º–∏

const API_URL = 'http://localhost:3001';

async function testInterfaceDifferences() {
  try {
    console.log(
      'üß™ Testing interface differences between dev and production modes...\n'
    );

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π userId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const userId = Math.floor(Math.random() * 1000000) + 100000;
    console.log(`üì± Using test userId: ${userId}`);

    // 1. –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('\n1Ô∏è‚É£ Creating auth URL...');
    const authUrlResponse = await fetch(
      `${API_URL}/api/telegram-bot/auth-url`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId,
          redirectUrl: 'http://localhost:5173/auth-callback',
        }),
      }
    );

    if (!authUrlResponse.ok) {
      throw new Error(`Failed to create auth URL: ${authUrlResponse.status}`);
    }

    const authUrlData = await authUrlResponse.json();
    console.log('‚úÖ Auth URL created successfully');
    console.log(`üîó Auth URL: ${authUrlData.data.authUrl}`);

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    console.log('\n2Ô∏è‚É£ Checking bot info...');
    const botInfoResponse = await fetch(`${API_URL}/api/telegram-bot/info`);

    if (botInfoResponse.ok) {
      const botInfo = await botInfoResponse.json();
      console.log('‚úÖ Bot info retrieved');
      console.log(`ü§ñ Bot name: ${botInfo.data.first_name}`);
      console.log(`üîó Username: @${botInfo.data.username}`);
      console.log(`üì± Has web app: ${botInfo.data.has_main_web_app}`);
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
    console.log('\n3Ô∏è‚É£ Checking token check URL...');
    const checkUrlResponse = await fetch(
      `${API_URL}/api/telegram-bot/check-url?userId=${userId}`
    );

    if (checkUrlResponse.ok) {
      const checkUrlData = await checkUrlResponse.json();
      console.log('‚úÖ Token check URL retrieved');
      console.log(`üîó Check URL: ${checkUrlData.data.checkUrl}`);
      console.log(`üåê Environment: ${checkUrlData.data.environment}`);
      console.log(`üì± User ID: ${checkUrlData.data.userId}`);
      console.log(
        `üîí Telegram compatible: ${checkUrlData.data.isTelegramCompatible}`
      );
    }

    console.log('\nüéâ Interface test completed!');
    console.log('\nüìù Summary:');
    console.log('- Dev mode: Text instructions with copyable links');
    console.log('- Production mode: Interactive buttons for direct access');
    console.log('- Different messages and warnings for each mode');
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
  }
}

testInterfaceDifferences();
