import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../hooks/useAuth';
import LoadingSpinner from '../components/LoadingSpinner';
import { setStoredToken, setStoredUser } from '../utils/auth';
import HeroSection from '../components/HeroSection';
import BackgroundGradient from '../components/BackgroundGradient';

const Home: React.FC = () => {
  const { user, isAuthenticated } = useAuth();
  const navigate = useNavigate();
  const [isProcessingAuth, setIsProcessingAuth] = useState(false);
  const [authError, setAuthError] = useState<string | null>(null);

  useEffect(() => {
    const handleTelegramWebAppAuth = async () => {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      if (isAuthenticated) {
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Telegram Web App
      const tg = window.Telegram?.WebApp;

      if (!tg) {
        console.log('Telegram Web App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –æ–±—ã—á–Ω–∞—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞');
        return;
      }

      console.log('üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram Web App, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
      setIsProcessingAuth(true);

      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram Web App
        const telegramUser = tg.initDataUnsafe?.user;
        const initData = tg.initData;

        console.log('üìã –î–∞–Ω–Ω—ã–µ Telegram:', {
          telegramUser,
          initData: initData ? initData.substring(0, 50) + '...' : null,
        });

        if (!telegramUser || !initData) {
          throw new Error(
            '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.'
          );
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
        tg.ready();
        tg.expand();

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram Web App
        await authenticateWithTelegram(initData);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        setAuthError(
          error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        );
      } finally {
        setIsProcessingAuth(false);
      }
    };

    handleTelegramWebAppAuth();
  }, [isAuthenticated]);

  const authenticateWithTelegram = async (initData: string) => {
    try {
      console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram Web App...');

      const API_URL =
        import.meta.env.VITE_API_URL || 'https://api.supermock.ru';

      const response = await fetch(`${API_URL}/api/auth/telegram-webapp`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ initData }),
      });

      const data = await response.json();
      console.log('üì° –û—Ç–≤–µ—Ç API Telegram:', data);

      if (response.ok && data.success && data.data?.token) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setStoredToken(data.data.token);
        setStoredUser(data.data.user);

        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram —É—Å–ø–µ—à–Ω–∞');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        window.location.reload();
      } else {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:', error);
      throw error;
    }
  };

  // –ï—Å–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (isProcessingAuth) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <LoadingSpinner
            message="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram Web App..."
            size="lg"
            fullScreen={true}
          />
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—ë
  if (authError) {
    return (
      <div className="min-h-screen flex items-center justify-center p-6">
        <div className="max-w-md w-full text-center">
          <div className="text-red-500 text-6xl mb-4">‚ùå</div>
          <h1 className="text-2xl font-bold mb-4">–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
          <p className="text-gray-600 mb-6">{authError}</p>
          <button
            onClick={() => window.location.reload()}
            className="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  // –û–±—ã—á–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  return (
    <div className="min-h-screen">
      <BackgroundGradient />
      <div className="relative z-10">
        <HeroSection />

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è Telegram Web App */}
        {window.Telegram?.WebApp && (
          <div className="bg-blue-50 border-t border-blue-200 py-4">
            <div className="container mx-auto px-4">
              <div className="text-center">
                <p className="text-blue-800 text-sm">
                  ‚úÖ –û—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ Telegram Web App
                </p>
                {window.Telegram.WebApp.initDataUnsafe?.user && (
                  <p className="text-blue-600 text-xs mt-1">
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:{' '}
                    {window.Telegram.WebApp.initDataUnsafe.user.first_name}
                  </p>
                )}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Home;
