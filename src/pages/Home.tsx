import React from 'react';
import { Card, CardContent } from '../components/ui/card';
import { useTelegramAuth } from '../hooks/useTelegramAuth';
import { useNavigate } from 'react-router-dom';
import HeroSection from '../components/HeroSection';
import BackgroundGradient from '../components/BackgroundGradient';
import Footer from '../components/Footer';
import LoadingSpinner from '../components/LoadingSpinner';
import AuthSection from '../components/AuthSection';

import {
  Code,
  Users,
  Zap,
  Shield,
  BookOpen,
  Target,
  Star,
  Clock,
  Award,
} from 'lucide-react';

const Home: React.FC = () => {
  const { user, loading, isAuthenticated } = useTelegramAuth();
  const [checkingFormData, setCheckingFormData] = React.useState(false);
  const navigate = useNavigate();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  React.useEffect(() => {
    const checkUserFormData = async () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω
      if (!isAuthenticated || !user) {
        setCheckingFormData(false);
        return;
      }

      const token =
        localStorage.getItem('extended_token') ||
        localStorage.getItem('telegram_token');

      if (!token) {
        setCheckingFormData(false);
        return;
      }

      setCheckingFormData(true);
      try {
        const apiUrl =
          import.meta.env.VITE_API_URL || 'https://api.supermock.ru';
        const response = await fetch(`${apiUrl}/api/form`, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });

        if (response.ok) {
          const data = await response.json();
          if (data.success && data.data) {
            // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —Å—Ç—Ä–∞–Ω–∞), –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é
            if (data.data.profession && data.data.country) {
              console.log(
                '‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /interview'
              );
              navigate('/interview');
            } else {
              console.log(
                '‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /collectingcontacts'
              );
              navigate('/collectingcontacts');
            }
          } else {
            console.log(
              '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /collectingcontacts'
            );
            navigate('/collectingcontacts');
          }
        } else {
          console.log(
            '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /collectingcontacts'
          );
          navigate('/collectingcontacts');
        }
      } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã:', error);
        navigate('/collectingcontacts');
      } finally {
        setCheckingFormData(false);
      }
    };

    checkUserFormData();
  }, [isAuthenticated, user, navigate]);

  const handleAuthSuccess = (_user: any, token: string) => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–ª—é—á–µ
    localStorage.setItem('telegram_token', token);

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
    setTimeout(() => {
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
      const checkFormDataAfterAuth = async () => {
        try {
          const apiUrl =
            import.meta.env.VITE_API_URL || 'http://localhost:3001';
          const response = await fetch(`${apiUrl}/api/form`, {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          if (response.ok) {
            const data = await response.json();
            if (
              data.success &&
              data.data &&
              data.data.profession &&
              data.data.country
            ) {
              console.log(
                '‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /interview'
              );
              navigate('/interview');
            } else {
              console.log(
                '‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /collectingcontacts'
              );
              navigate('/collectingcontacts');
            }
          } else {
            console.log(
              '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /collectingcontacts'
            );
            navigate('/collectingcontacts');
          }
        } catch (error) {
          console.error(
            '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:',
            error
          );
          navigate('/collectingcontacts');
        }
      };

      checkFormDataAfterAuth();
    }, 500);
  };

  const handleAuthError = (error: string) => {
    console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
  };

  if (loading || checkingFormData) {
    return (
      <BackgroundGradient className="min-h-screen flex items-center justify-center">
        <LoadingSpinner
          message={
            checkingFormData
              ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...'
              : '–ó–∞–≥—Ä—É–∑–∫–∞...'
          }
        />
      </BackgroundGradient>
    );
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  if (isAuthenticated && user && !checkingFormData) {
    return (
      <BackgroundGradient className="min-h-screen flex items-center justify-center">
        <LoadingSpinner message="–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ..." />
      </BackgroundGradient>
    );
  }

  // Features data
  const features = [
    {
      icon: Code,
      title: '–†–µ–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏',
      description:
        '–†–µ—à–∞–π—Ç–µ –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö',
    },
    {
      icon: Users,
      title: '–ñ–∏–≤—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä—ã',
      description:
        '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å —Å –æ–ø—ã—Ç–Ω—ã–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫',
    },
    {
      icon: Zap,
      title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç',
      description: '–ù–∞—á–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —á–µ—Ä–µ–∑ Telegram',
    },
    {
      icon: Shield,
      title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ',
      description: '–ê–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∏ –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram',
    },
    {
      icon: BookOpen,
      title: '–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Ä–æ—Å—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞',
    },
    {
      icon: Target,
      title: '–¶–µ–ª–µ–≤–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
      description: '–§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –Ω–∞–≤—ã–∫–∞—Ö –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö',
    },
  ];

  // –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω
  return (
    <BackgroundGradient className="min-h-screen">
      {/* Hero Section */}
      <HeroSection />

      {/* Features Section */}
      <section className="py-20 bg-gradient-secondary relative overflow-hidden">
        {/* Animated background elements */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-20 right-20 w-64 h-64 bg-primary/5 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-20 left-20 w-64 h-64 bg-accent/5 rounded-full blur-3xl animate-pulse delay-1000"></div>
        </div>

        <div className="container mx-auto px-4 relative z-10">
          <div className="text-center mb-16">
            <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 border border-primary/20 text-primary text-sm font-medium mb-6">
              <Star className="w-4 h-4" />
              –ü–æ—á–µ–º—É SuperMock?
            </div>
            <h2 className="text-3xl lg:text-4xl font-bold mb-4 text-gradient">
              –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              –ö IT-—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–∞–º–∏ –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏
              –∑–∞–¥–∞—á–∞–º–∏
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <Card
                key={index}
                className="p-6 card-hover border-0 bg-white/50 backdrop-blur hover-lift"
              >
                <div className="flex items-start space-x-4">
                  <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0">
                    <feature.icon className="w-6 h-6 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-2">
                      {feature.title}
                    </h3>
                    <p className="text-muted-foreground text-sm">
                      {feature.description}
                    </p>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-background">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <Card className="p-6 bg-gradient-secondary border-0 card-hover">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-3">
                  <Users className="w-6 h-6 text-primary" />
                </div>
                <div className="text-2xl font-bold">15,000+</div>
                <div className="text-sm text-muted-foreground">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
              </CardContent>
            </Card>

            <Card className="p-6 bg-gradient-secondary border-0 card-hover">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 bg-accent/10 rounded-lg flex items-center justify-center mx-auto mb-3">
                  <Zap className="w-6 h-6 text-accent" />
                </div>
                <div className="text-2xl font-bold">50,000+</div>
                <div className="text-sm text-muted-foreground">
                  –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
                </div>
              </CardContent>
            </Card>

            <Card className="p-6 bg-gradient-secondary border-0 card-hover">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 bg-success/10 rounded-lg flex items-center justify-center mx-auto mb-3">
                  <Clock className="w-6 h-6 text-success" />
                </div>
                <div className="text-2xl font-bold">24/7</div>
                <div className="text-sm text-muted-foreground">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</div>
              </CardContent>
            </Card>

            <Card className="p-6 bg-gradient-secondary border-0 card-hover">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 bg-warning/10 rounded-lg flex items-center justify-center mx-auto mb-3">
                  <Award className="w-6 h-6 text-warning" />
                </div>
                <div className="text-2xl font-bold">95%</div>
                <div className="text-sm text-muted-foreground">–£—Å–ø–µ—à–Ω—ã—Ö</div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Auth Section */}
      <section
        id="auth-section"
        className="py-20 bg-gradient-secondary relative overflow-hidden"
      >
        {/* Animated background elements */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-1/4 right-1/4 w-48 h-48 bg-primary/5 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-1/4 left-1/4 w-48 h-48 bg-accent/5 rounded-full blur-3xl animate-pulse delay-1000"></div>
        </div>

        <div className="container mx-auto px-4 relative z-10">
          <AuthSection
            onAuthSuccess={handleAuthSuccess}
            onAuthError={handleAuthError}
          />
        </div>
      </section>

      {/* Footer */}
      <Footer />
    </BackgroundGradient>
  );
};

export default Home;
