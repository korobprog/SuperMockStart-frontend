import React, { useEffect } from 'react';
import { useAuth } from '../hooks/useAuth';
import { getStoredToken } from '../utils/auth';

interface AuthProviderProps {
  children: React.ReactNode;
}

const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {
  const { checkAuth, token, isAuthenticated, login } = useAuth();

  useEffect(() => {
    // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    const initializeAuth = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –≤ localStorage
        const storedToken = getStoredToken();

        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω —É–∂–µ –µ—Å—Ç—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –Ω–µ –¥–µ–ª–∞–µ–º –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (storedToken && token && isAuthenticated) {
          console.log('üîë –¢–æ–∫–µ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –≤–∞–ª–∏–¥–µ–Ω');
          return;
        }

        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
        const authResult = await checkAuth();

        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–µ–º —Ç–∏—Ö—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Telegram WebApp
        if (
          (!authResult || (authResult as any).meta?.requestStatus === 'rejected') &&
          typeof window !== 'undefined' &&
          !!window.Telegram?.WebApp?.initData
        ) {
          try {
            const initData = window.Telegram.WebApp.initData;
            if (initData && initData.length > 0) {
              console.log('ü§ñ Silent Telegram WebApp auth using initData');
              await login(initData);
              return;
            }
          } catch (e) {
            console.warn('Silent Telegram auth failed:', e);
          }
        }

        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∞–≤—Ç–æ‚Äë–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è
        if (!authResult || (authResult as any).meta?.requestStatus === 'rejected') {
          console.log(
            'üîë –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram'
          );
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      }
    };

    initializeAuth();
  }, []); // –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã useEffect –≤—ã–ø–æ–ª–Ω—è–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

  return <>{children}</>;
};

export default AuthProvider;
