services:
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:krishna1284radha@database:5432/supermock?schema=public
      - JWT_SECRET=052aa937e3faf8542efe8c091a7ff830
      - JWT_EXPIRES_IN=7d
      - TELEGRAM_TOKEN=8213869730:AAHIR0oUPS-sfyMvwzStYapJYc7YH4lMlS4
      - BOT_USERNAME=SuperMockTest_bot
      - FRONTEND_URL=http://localhost:5173
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    networks:
      - supermock-dev-network
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  database:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: krishna1284radha
      POSTGRES_DB: supermock
    networks:
      - supermock-dev-network
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d supermock']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Опциональный сервис для просмотра базы данных
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - '8080:8080'
    networks:
      - supermock-dev-network
    depends_on:
      - database

volumes:
  postgres_dev_data:

networks:
  supermock-dev-network:
    driver: bridge
