services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    networks:
      - dokploy-network
    depends_on:
      - backend
    labels:
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-web.rule=Host(`supermock.ru`)
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-web.entrypoints=web
      - traefik.http.services.supermock-supermock-full-stack-yrvopu-3-web.loadbalancer.server.port=80
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-web.service=supermock-supermock-full-stack-yrvopu-3-web
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-web.middlewares=redirect-to-https@file
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-websecure.rule=Host(`supermock.ru`)
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-websecure.entrypoints=websecure
      - traefik.http.services.supermock-supermock-full-stack-yrvopu-3-websecure.loadbalancer.server.port=80
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-websecure.service=supermock-supermock-full-stack-yrvopu-3-websecure
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-3-websecure.tls.certresolver=letsencrypt
      - traefik.docker.network=dokploy-network
      - traefik.enable=true
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    expose:
      - 3001
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:krishna1284radha@database:5432/supermock
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - BOT_USERNAME=${BOT_USERNAME}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    networks:
      - dokploy-network
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ../files/backend-logs:/app/logs
    labels:
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-web.rule=Host(`api.supermock.ru`) && PathPrefix(`/api`)
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-web.entrypoints=web
      - traefik.http.services.supermock-supermock-full-stack-yrvopu-4-web.loadbalancer.server.port=3001
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-web.service=supermock-supermock-full-stack-yrvopu-4-web
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-web.middlewares=redirect-to-https@file
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-websecure.rule=Host(`api.supermock.ru`) && PathPrefix(`/api`)
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-websecure.entrypoints=websecure
      - traefik.http.services.supermock-supermock-full-stack-yrvopu-4-websecure.loadbalancer.server.port=3001
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-websecure.service=supermock-supermock-full-stack-yrvopu-4-websecure
      - traefik.http.routers.supermock-supermock-full-stack-yrvopu-4-websecure.tls.certresolver=letsencrypt
      - traefik.docker.network=dokploy-network
      - traefik.enable=true
  database:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: krishna1284radha
      POSTGRES_DB: supermock
    networks:
      - dokploy-network
    volumes:
      - ../files/postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d supermock
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
networks:
  dokploy-network:
    external: true 